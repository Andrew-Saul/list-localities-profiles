name: Style Modified Files

on:
  pull_request_target: # Triggers when code is pushed to a PR's target branch
    types: [opened, synchronize, reopened]

jobs:
  style_check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for accurate diff

      - name: Delete .Rprofile (if present)
        run: if [ -f .Rprofile ]; then rm .Rprofile; fi

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true
        
      - name: Install pak (will install any system deps too)
        run: install.packages("pak")
        shell: Rscript {0}

      - name: Install styler and other packages
        run: pak::pak(c("styler", "purrr", "gh"))
        shell: Rscript {0}

      - name: Enable styler cache
        run: styler::cache_activate()
        shell: Rscript {0}

      - name: Determine cache location
        id: styler-location
        run: |
          cat(
            "location=",
            styler::cache_info(format = "tabular")$location,
            "\n",
            file = Sys.getenv("GITHUB_OUTPUT"),
            append = TRUE,
            sep = ""
          )
        shell: Rscript {0}

      - name: Cache styler
        uses: actions/cache@v4
        with:
          path: ${{ steps.styler-location.outputs.location }}
          key: ${{ runner.os }}-styler-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-styler-
            ${{ runner.os }}-

      - name: Style modified R files
        env:  # Set the GITHUB_TOKEN so it can 'see' the private repo
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
        run: |
          files <- gh::gh("GET https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files")
          changed_files <- purrr::map_chr(files, "filename")
          all_files <- list.files(recursive = TRUE)
          exclusions_list <- as.list(setdiff(all_files, changed_files))
          styler::style_dir(exclude_files = exclusions_list)
        shell: Rscript {0}

      - name: Commit and push changes
        run: |
          # Create an array to properly handle filenames with spaces or special characters
          IFS=$'\n' read -r -d '' -a FILES_TO_COMMIT < <(git diff-index --name-only ${{ github.sha }} | egrep --ignore-case '\.(R|[qR]md|Rmarkdown|Rnw|Rprofile)$' && printf '\0')
      
          if [[ ${#FILES_TO_COMMIT[@]} -gt 0 ]]; then
            git config --local user.name "$GITHUB_ACTOR"
            git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
      
            # Use double quotes around the array expansion to handle spaces
            git commit "${FILES_TO_COMMIT[@]}" -m "Style code (GHA)"
            git pull --ff-only
            git push origin
          else
            echo "No changes to commit."
          fi
